// Enables or disables the logger.
enabled = true;

// Where should the logfile be stored?
logFilePath = "/home/nao/logs";

numBuffers = 600;

bufferSize = 500000;

//List of representations that should be logged.
representations = [
  {
    cycle = Cognition;
    representations = [
        ActivationGraph,
        AudioData,
        Ballchaser,
        BallModel,
        BallPercept,
        BallSymbols,
        BehaviorData,
        CameraCalibration,
        CameraInfo,
        CameraInfoUpper,
        CameraMatrix,
        CameraMatrixUpper,
        //DangerMap,
        FrameInfo,
        GameInfo,
        HeadAngleRequest,
        HeadControlRequest,
        //CLIPGoalPercept,
        CLIPFieldLinesPercept,
        CLIPCenterCirclePercept,
        PenaltyCrossPercept,
        //LocalizationTeamBall,
        MotionInfo,
        MotionRequest,
        MultipleBallPercept,
        OdometryData,
        OwnTeamInfo,
        OpponentTeamInfo,
        PositioningSymbols,
        ProcessedBallPatches,
        //RemoteBallModel,
        RobotHealth,
        RobotInfo,
        //RobotMap,
        RobotPose,
        RawGameInfo,
        RobotPoseHypothesesCompressed,
        RobotsPercept,
        RoleSymbols,
        SideConfidence,
        TeamBallModel,
        TeammateData,
        VisualRefereeBehaviorSymbols,
    ];
  },
  {
    cycle = Motion;
    representations = [
        CustomStepSelection,
        FrameInfo,
        FsrSensorData,
        InertialSensorData,
        InertialData,
        JointRequest,
        KinematicRequest,
        JointSensorData,
        KeyStates,
        SystemSensorData,
        MotionInfo,
        MotionRequest,
        MotionSelection,
        SpeedRequest,
        FallDownState,
        Footpositions,
        MotionState,
        WalkCalibration,
        SonarSensorData,
    ];
  }
];

//List of representations that should be logged additionally when the robot is active.
activeRepresentations = [
  {
    cycle = Cognition;
    representations = [
        JPEGImage,
        JPEGImageUpper,
    ];
  },
  {
    cycle = Motion;
    representations = [
    ];
  }
];

// Priority of the background thread that writes the data to disk.
// Priorities > 0 use the real time scheduler, 0 uses the normal scheduler.
writePriority = 0;

// Minimum amount of space that should be left on the device.
// If the free space on the device falls below this value, the logger
// will stop writing data (in MB).
minFreeSpace = 100;

compression = false;

// Enable verbose text-to-speech output
verboseTTS = false;
